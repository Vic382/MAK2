#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****


#################################################################
#                                               DESCRIPTION DU PROCESSUS                                              #
#                                                                                                                                                   #
# Date :   05/10:2018                                                                                                                  #
#                                                                                                                                                   #
# Fait par :   Elisabeth MOUNIER                                                                                                 #
#                                                                                                                                                   #
# Action : Processus compteur des éléments de la dimension MATERIAL_PLAN                        #
#                  pour savoir si les éléments conso ont des planning mat, pour la hiérarchie RETAIL #                                                                                                                                 
#                                                                                                                                                   #
#################################################################



#====================================#
#             Déclaration des variables                   #
#====================================#

#--------------------Cubes--------------------#
C_zPROCESS_ADMINISTRATION = 'zPROCESS_ADMINISTRATION';
C_Cube_Attributs = '}ElementAttributes_SLS_MATERIAL_PLAN';


#--------------------Dimensions--------------------#

#D_MATERIAL = '1_G_MATERIAL';
D_MATERIAL_PLAN = 'SLS_MATERIAL_PLAN';
D_ATTR = '}ElementAttributes_SLS_MATERIAL_PLAN';


#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
IF (SUBST ( TM1User, 1,3) @='DOM' ) ;
   vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),7,100);
ELSEIF  (SUBST ( TM1User, 1,3) @='Cog' ) ; 
    vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),16,100);
ELSE ;
    vUSER ='Admin';
ENDIF;
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';




#Hierarchie max
level_TOT_MAT = ELLEV(D_MATERIAL_PLAN, 'TOTAL_PLANNING_MATERIAL');
level_TOT_RETAIL = ELLEV(D_MATERIAL_PLAN, 'TOTAL_RETAIL');

level_max = level_TOT_MAT;
If(level_TOT_RETAIL > level_max);
	level_max = level_TOT_RETAIL;
EndIf; 


level_fin = 0;



#--------------------Subsets--------------------#
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;
subset_final = 'z_final_' | vUSER |'_' | vPRO_NAME|'_RETAIL'; 
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;

#--------------------Vues--------------------#
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;

#============================================#
#     Initialisation de la vue à supprimer   #
#============================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Attributs,view_erase);
subsetdestroy(D_MATERIAL_PLAN,subset_erase);

#--------------------Création des objets--------------------#
ViewCreate(C_Cube_Attributs,view_erase);
MDX = '{{[SLS_MATERIAL_PLAN].[TOTAL_PLANNING_MATERIAL]},{EXCEPT(TM1SUBSETALL([SLS_MATERIAL_PLAN]), TM1FILTERBYLEVEL(TM1SUBSETALL([SLS_MATERIAL_PLAN]), 0))}}';
SubsetCreatebyMDX(subset_erase, MDX);
SubsetElementDelete( D_MATERIAL_PLAN, subset_erase, 1);

subsetcreate(D_ATTR,subset_erase);
SubsetElementInsert( D_ATTR, subset_erase, 'Flag_Conso_Retail', 1);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_Cube_Attributs,view_erase, D_MATERIAL_PLAN,subset_erase);
ViewSubsetAssign(C_Cube_Attributs,view_erase, D_ATTR,subset_erase);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube_Attributs,view_erase,1);
ViewSetSkipCalcs(C_Cube_Attributs,view_erase, 1);
ViewSetSkipZeroes(C_Cube_Attributs,view_erase, 1);

#--------------------Suppression des données--------------------#
ViewZeroOut(C_Cube_Attributs,view_erase);

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Attributs,view_erase);
subsetdestroy(D_MATERIAL_PLAN,subset_erase);
subsetdestroy(D_ATTR,subset_erase);


#--------------------Destruction des objets--------------------#
Subsetdestroy(D_MATERIAL_PLAN,subset_final);
SubsetCreate(D_MATERIAL_PLAN,subset_final);



#création des subsets, commence par le subset de niv max
While(level_max >= 0);

	Subsetdestroy(D_MATERIAL_PLAN,subset_copy);
	#subset provisoire filtré par level
	str_level_max = NumberToString(level_max);
	MDX_ELEM_LEV = '{{[SLS_MATERIAL_PLAN].[TOTAL_RETAIL]}, {TM1FILTERBYLEVEL( {TM1SUBSETALL( [SLS_MATERIAL_PLAN] )},'| str_level_max |')}}';
	SubsetCreateByMDX(subset_copy, MDX_ELEM_LEV);	
    SubsetElementDelete(D_MATERIAL_PLAN, subset_copy, 1);


	
	#ajout des éléments dans le subset

	NB_ELEM_SUBSET = SubsetGetSize(D_MATERIAL_PLAN, subset_copy);
	i = 1; 
	
	
	#copier les élements du subet provisoire dans le subset final
	While( i < NB_ELEM_SUBSET + 1);

		ELEM_NAME = SubsetGetElementName(D_MATERIAL_PLAN, subset_copy, i);
		SubsetElementInsert(D_MATERIAL_PLAN, subset_final, ELEM_NAME, 1);
		i = i + 1;
	End; 

	level_max = level_max - 1;

End; 


DatasourceDimensionSubset = subset_final;







#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****


#cell increment

Parent1 = ELPAR(D_MATERIAL_PLAN, vMat, 1);
Parent2 = ELPAR(D_MATERIAL_PLAN, vMat, 2);

If(ATTRN(D_MATERIAL_PLAN, vMat, 'Flag_conso_Retail') = 1 & DIMIX(D_MATERIAL_PLAN, Parent1) <> 0);
	CellIncrementN(1,C_cube_Attributs, Parent1, 'Flag_conso_retail');
EndIf;

If(ATTRN(D_MATERIAL_PLAN, vMat, 'Flag_conso_Retail') = 1 & DIMIX(D_MATERIAL_PLAN, Parent2) <> 0);
	CellIncrementN(1,C_cube_Attributs, Parent2, 'Flag_conso_retail');
EndIf;


#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

Subsetdestroy(D_MATERIAL_PLAN,subset_final);
Subsetdestroy(D_MATERIAL_PLAN,subset_copy);
#endregion