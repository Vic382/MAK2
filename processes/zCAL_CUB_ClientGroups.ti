#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

################################################################
#                   DESCRIPTION DU PROCESSUS                   #
#                                                              #
# Date :   10/04/2019                                          #
#                                                              #
# Fait par :    Ann BESNARD                                    #
#                                                              #
# Action : Mise a jour de l'affectation d'un client à un	   #   
#	groupe de sécurité selon sa sélection dans zSELECT         #                                                                       	      
#									                           #                                                                                                                                                 #
################################################################

#====================================#
#      Déclaration des variables     #
#====================================#

#--------------------Cubes--------------------#
C_zSELECT = 'zSELECT';
C_ClientGroups = '}ClientGroups';

#--------------------Dimensions--------------------#
D_Clients = '}Clients';
D_Groups = '}Groups';

#--------------------Elements--------------------#
Ind = 'Sales_Group_Security';

#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
IF (SUBST ( TM1User, 1,3) @='DOM' ) ;
   vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),7,100);
ELSEIF  (SUBST ( TM1User, 1,3) @='Cog' ) ; 
    vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),16,100);
ELSE ;
    vUSER ='Admin';
ENDIF;
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';

vClient = AttrS('}Clients',TM1User,'Caption');  

#--------------------Vues--------------------#
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
view_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;

#--------------------Sous-ensembles--------------------#
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;

#============================================#
#       Initialisation de la vue à supprimer #
#============================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_ClientGroups,view_erase);
Subsetdestroy(D_Clients,subset_erase);
Subsetdestroy(D_Groups,subset_erase);

#--------------------Création des objets--------------------#
ViewCreate(C_ClientGroups,view_erase);



#D_Clients
subsetcreate(D_Clients,subset_erase);
#User = DimensionElementPrincipalName(D_Clients, vClient);
SubsetElementInsert(D_Clients, subset_erase, TM1User, 1);

#D_Groups
MDX_GROUP = 'FILTER({TM1SUBSETALL([}Groups])},[}Groups].[Sales Group] =1 AND [}Groups].[Sales_Man] =0)';
SubsetCreatebyMDX( subset_erase, MDX_GROUP, 0);
SubsetElementDelete( D_Groups, subset_erase, 1);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_ClientGroups,view_erase, D_Clients, subset_erase);
ViewSubsetAssign(C_ClientGroups,view_erase, D_Groups, subset_erase);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_ClientGroups,view_erase,1);
ViewSetSkipCalcs(C_ClientGroups,view_erase, 1);
ViewSetSkipZeroes(C_ClientGroups,view_erase, 1);

#--------------------Suppression des données--------------------#
ViewZeroOut(C_ClientGroups,view_erase);

#--------------------Destruction des objets--------------------#
ViewDestroy(C_ClientGroups,view_erase);
Subsetdestroy(D_Clients,subset_erase);
Subsetdestroy(D_Groups,subset_erase);


#============================================#
#         Mise en place du Group approprié   #
#============================================#

Sales_Group_Select = CellGetS(C_zSELECT, TM1User, Ind);
Data = DimensionElementPrincipalName( D_Groups, Sales_Group_Select);
User = DimensionElementPrincipalName( D_Clients, vClient );

CellPutS(Data, C_ClientGroups, TM1User, Sales_Group_Select);



#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion