#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

################################################################
#                                               DESCRIPTION DU PROCESSUS                                              #
#                                                                                                                                                   #
# Date :   12/12/2018                                                                                                                 #
#                                                                                                                                                   #
# Fait par :    Ann BESNARD                                                                                                        #
#                                                                                                                                                   #
# Action : Processus de chargement du cube GENERAL_HYP                               	      #
#		 	                	 				      #
#                                                                                                                                                   #
#################################################################



#====================================#
#             Déclaration des variables                   #
#====================================#

#--------------------Cubes--------------------#
C_Cube_Source = '}ElementAttributes_1_G_PHASE';
C_Attr_CURR_PHASE = '}ElementAttributes_1_G_CURRENT_PHASE';
C_Cube_Cible = 'SLS_GENERAL_HYP';
C_zPROCESS_ADMINISTRATION = 'zPROCESS_ADMINISTRATION';


#--------------------Dimensions--------------------#
D_CURR_PHASE = '1_G_CURRENT_PHASE';
D_PERIOD = '1_G_PERIOD';
D_SALES_ORG = '1_G_SALES_ORG';
D_DISTRIB_CHANNEL = '1_G_DISTRIB_CHANNEL';
D_CUSTOMER = 'SLS_CUSTOMER';
D_PAYER='SLS_PAYER';
D_SOLD_TO='SLS_SOLD_TO';
D_MATERIAL = '1_G_MATERIAL';
D_SALES_GROUP = 'SLS_SALES_GROUP';
D_VENDOR = 'SLS_VENDOR';
D_PROD_PLANT='SLS_PROD_PLANT';
D_SHIP_PLANT = 'SLS_SHIP_PLANT';
D_SHIP_POINT = 'SLS_SHIP_POINT';
D_INCOTERM = 'SLS_INCOTERM';
D_DETAIL_IND='SLS_DETAIL_IND';

D_CURRENCY = '1_G_CURRENCY';
D_VOLUME_UNIT = '1_G_VOLUME_UNIT';
D_MATERIAL_PLAN = 'SLS_MATERIAL_PLAN';
D_SALES_PLAN_IND = 'SLS_SALES_PLAN_IND';

D_GENERAL_HYP_IND = 'SLS_GENERAL_HYP_IND';

Sub_Curr_Ph_P = 'Current Phase Periods';

#--------------------Elements--------------------#
e_Message_Prolog = '';

Phase = CellGetS('zPARAM', 'Phase', 'Value');

#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
IF (SUBST ( TM1User, 1,3) @='DOM' ) ;
   vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),7,100);
ELSEIF  (SUBST ( TM1User, 1,3) @='Cog' ) ; 
    vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),16,100);
ELSE ;
    vUSER ='Admin';
ENDIF;
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';



#--------------------Vues--------------------#
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
view_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;

#--------------------Sous-ensembles--------------------#
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;



DatasourceASCIIDecimalSeparator='.';
DatasourceASCIIThousandSeparator='';

#====================================#
#        Désactivation de la consignation             #
#====================================#

OldCubeLogChanges = CUBEGETLOGCHANGES(C_Cube_Cible);
CUBESETLOGCHANGES(C_Cube_Cible, 0);


#=========================================#
#     Initialisation de la vue à supprimer           #
#=========================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Cible,view_erase);
SubsetDestroy(D_CURR_PHASE, subset_erase);
SubsetDestroy(D_SALES_ORG, subset_erase);
SubsetDestroy(D_DISTRIB_CHANNEL, subset_erase);
SubsetDestroy(D_MATERIAL, subset_erase);
SubsetDestroy(D_GENERAL_HYP_IND, subset_erase);

#--------------------Création des objets--------------------#

ViewCreate(C_Cube_Cible,view_erase);

#D_PHASE
SubsetCreate(D_CURR_PHASE,subset_erase);
SubsetElementInsert(D_CURR_PHASE, subset_erase,Phase, 1);

#D_PERIOD
#Sub_Curr_Ph_P

#D_SALES_ORG
SubsetCreate(D_SALES_ORG,subset_erase);
SubsetElementInsert(D_SALES_ORG, subset_erase,'N/A SALES ORG', 1);

#D_DISTRIB_CHANNEL
MDX_DISTRIB_CHANNEL = 'TM1FILTERBYLEVEL({TM1SUBSETALL([1_G_DISTRIB_CHANNEL])},0)}';
SubsetCreateByMDX(subset_erase, MDX_DISTRIB_CHANNEL);

#D_MATERIAL
MDX_MATERIAL = 'TM1FILTERBYLEVEL({DESCENDANTS([1_G_MATERIAL].[TOTAL_MATERIAL])},2)}';
SubsetCreateByMDX(subset_erase, MDX_MATERIAL);

#D_GENERAL_HYP_IND
SubsetCreate(D_GENERAL_HYP_IND,subset_erase);
SubsetElementInsert(D_GENERAL_HYP_IND, subset_erase, 'Initialization Phase', 1);
SubsetElementInsert(D_GENERAL_HYP_IND, subset_erase, 'Initialization Month', 1);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_Cube_Cible,view_erase, D_CURR_PHASE,subset_erase);
ViewSubsetAssign(C_Cube_Cible,view_erase, D_PERIOD, Sub_Curr_Ph_P);
ViewSubsetAssign(C_Cube_Cible,view_erase, D_SALES_ORG,subset_erase);
ViewSubsetAssign(C_Cube_Cible,view_erase, D_DISTRIB_CHANNEL,subset_erase);
ViewSubsetAssign(C_Cube_Cible,view_erase, D_MATERIAL,subset_erase);
ViewSubsetAssign(C_Cube_Cible,view_erase, D_GENERAL_HYP_IND,subset_erase);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube_Cible,view_erase,1);
ViewSetSkipCalcs(C_Cube_Cible,view_erase, 0);
ViewSetSkipZeroes(C_Cube_Cible,view_erase, 0);

#--------------------RAZ de la vue cible--------------------#
ViewZeroOut( C_Cube_Cible, view_erase );

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Cible,view_erase);
SubsetDestroy(D_CURR_PHASE, subset_erase);
SubsetDestroy(D_SALES_ORG, subset_erase);
SubsetDestroy(D_DISTRIB_CHANNEL, subset_erase);
SubsetDestroy(D_MATERIAL, subset_erase);
SubsetDestroy(D_GENERAL_HYP_IND, subset_erase);


#=========================================#
#     Initialisation de la vue à copier/vue source           #
#=========================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Cible,view_copy);
SubsetDestroy(D_CURR_PHASE, subset_copy);
SubsetDestroy(D_SALES_ORG, subset_copy);
SubsetDestroy(D_DISTRIB_CHANNEL, subset_copy);
SubsetDestroy(D_MATERIAL, subset_copy);
SubsetDestroy(D_GENERAL_HYP_IND, subset_copy);

#--------------------Création des objets--------------------#

ViewCreate(C_Cube_Cible,view_copy);

#D_PHASE
SubsetCreate(D_CURR_PHASE,subset_copy);
SubsetElementInsert(D_CURR_PHASE, subset_copy,Phase, 1);

#D_PERIOD
#Sub_Curr_Ph_P

#D_SALES_ORG
SubsetCreate(D_SALES_ORG,subset_copy);
SubsetElementInsert(D_SALES_ORG, subset_copy,'N/A SALES ORG', 1);

#D_DISTRIB_CHANNEL
MDX_DISTRIB_CHANNEL = 'TM1FILTERBYLEVEL({TM1SUBSETALL([1_G_DISTRIB_CHANNEL])},0)}';
SubsetCreateByMDX(subset_copy, MDX_DISTRIB_CHANNEL);

#D_MATERIAL
MDX_MATERIAL = 'TM1FILTERBYLEVEL({DESCENDANTS([1_G_MATERIAL].[TOTAL_MATERIAL])},2)}';
SubsetCreateByMDX(subset_copy, MDX_MATERIAL);

#D_GENERAL_HYP_IND
SubsetCreate(D_GENERAL_HYP_IND,subset_copy);
SubsetElementInsert(D_GENERAL_HYP_IND, subset_copy, 'Initialization Phase', 1);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_Cube_Cible,view_copy, D_CURR_PHASE,subset_copy);
ViewSubsetAssign(C_Cube_Cible,view_copy, D_PERIOD, Sub_Curr_Ph_P);
ViewSubsetAssign(C_Cube_Cible,view_copy, D_SALES_ORG,subset_copy);
ViewSubsetAssign(C_Cube_Cible,view_copy, D_DISTRIB_CHANNEL,subset_copy);
ViewSubsetAssign(C_Cube_Cible,view_copy, D_MATERIAL,subset_copy);
ViewSubsetAssign(C_Cube_Cible,view_copy, D_GENERAL_HYP_IND,subset_copy);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube_Cible,view_copy,1);
ViewSetSkipCalcs(C_Cube_Cible,view_copy, 0);
ViewSetSkipZeroes(C_Cube_Cible,view_copy, 0);

#--------------------définition de la vue source--------------------#

DatasourceCubeview= view_copy ;  

#endregion
#region Metadata
If( AttrS(D_PERIOD, vELEM_PERIOD, 'Index') @= 'C');
	ItemSkip;
EndIf;

#Premier Mois de Simulation
First_Month_Sim = CellGetS(C_Attr_CURR_PHASE, Phase, 'First Simulation Month');
Index = StringToNumber(AttrS( D_PERIOD, First_Month_Sim, 'Index'));

CellPutS(vELEM_PERIOD, C_Cube_Cible, vELEM_PHASE, vELEM_PERIOD, vELEM_SALES_ORG, 
	vELEM_DISTRIB_CHANNEL, vELEM_MATERIAL, 
	'Initialization Month');

If( StringToNumber(AttrS(D_PERIOD, vELEM_PERIOD, 'Index')) >= Index);
	ItemSkip;
EndIf;

CellPutS('Actual', C_Cube_Cible, vELEM_PHASE, vELEM_PERIOD, vELEM_SALES_ORG, 
	vELEM_DISTRIB_CHANNEL, vELEM_MATERIAL, 
	vELEM_IND);
   
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****


#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Cible,view_copy);
SubsetDestroy(D_CURR_PHASE, subset_copy);
SubsetDestroy(D_SALES_ORG, subset_copy);
SubsetDestroy(D_DISTRIB_CHANNEL, subset_copy);
SubsetDestroy(D_MATERIAL, subset_copy);
SubsetDestroy(D_GENERAL_HYP_IND, subset_copy);

#====================================#
#   Activation de la consignation    #
#====================================#

OldCubeLogChanges = CUBEGETLOGCHANGES(C_Cube_Cible);
CUBESETLOGCHANGES(C_Cube_Cible, 1);

#endregion