#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

#################################################################
#                   DESCRIPTION DU PROCESSUS                    #
#                                                               #
# Date :   25/04/2019                                           #
#                                                               #
# Fait par :   Anne BESNARD                                     #
#                                                               #
# Action : Processus de tri de le hiérarchie     	            #
#                 RETAIL pour la dim Planning Mat      			#                                                                                                                            #
#################################################################

SetInputCharacterSet('TM1CS_UTF8');

#====================================#
#             Déclaration des variables                   #
#====================================#

#--------------------Cubes--------------------#
C_zPROCESS_ADMINISTRATION = 'zPROCESS_ADMINISTRATION';

#--------------------Dimensions--------------------#
D_MATERIAL_PLAN = 'SLS_MATERIAL_PLAN';
D_MATERIAL = '1_G_MATERIAL'; 
D_MATERIAL_PRICE = 'SLS_MATERIAL_PLAN_PRICE';

#DimensionDeleteAllElements(D_MATERIAL_PLAN);
#ProcessBreak();


#--------------------Elements--------------------#
TOT_PM = 'TOTAL_RETAIL';
TOT_MAT = 'TOTAL_RETAIL'; 

#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
IF (SUBST ( TM1User, 1,3) @='DOM' ) ;
   vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),7,100);
ELSEIF  (SUBST ( TM1User, 1,3) @='Cog' ) ; 
    vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),16,100);
ELSE ;
    vUSER ='Admin';
ENDIF;
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';

#--------------------Vues--------------------#
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;

#--------------------Sous-ensembles--------------------#
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;

#--------------------Sources de données--------------------#
SubsetDestroy(D_MATERIAL, subset_copy);
SubsetCreate( D_MATERIAL, subset_copy );
MDX_ELEM_SANS_PRECEDENT = 'EXCEPT(
	{FILTER(
		{FILTER(
	{TM1SUBSETALL([1_G_MATERIAL])},
	[1_G_MATERIAL].[Hierarchie Retail] = 1
	)},
		[1_G_MATERIAL].[Precedent Retail]@=""
	)},
	{TM1FILTERBYLEVEL({TM1SUBSETALL([1_G_MATERIAL])},0)
	}
)';
#MDX_ELEM_SANS_SUIVANT = 'EXCEPT({FILTER({DESCENDANTS([1_G_MATERIAL].[Total Retail])},[1_G_MATERIAL].[Suivant Retail]@="")},{TM1FILTERBYLEVEL({TM1SUBSETALL([1_G_MATERIAL])},0)})';
SubsetMDXSet( D_MATERIAL, subset_copy, MDX_ELEM_SANS_PRECEDENT );

DatasourceDimensionSubset= subset_copy;



#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****



#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****


 
#-----------------SLS_MATERIAL_PLAN------------------# 
#Rattachement des éléments à leur parent, leur enfant
#Si l'élément existe dans la dim
 If( DIMIX(D_MATERIAL_PLAN, vELEM_MATERIAL) <> 0);
 	vELEM_MATERIAL = DimensionElementPrincipalName(D_MATERIAL_PLAN, vELEM_MATERIAL);
    
    #On récupère son parent
 	Parent = AttrS(D_MATERIAL_PLAN, vELEM_MATERIAL, 'Parent Retail');
    
    #On ne rattache pas le total retail
     If(vELEM_MATERIAL @= 'TOTAL_RETAIL');
     	ItemSkip;
        
     #On rattache les éléments sans parents au total retail
     ElseIf(Parent @= '' % Parent @= '0');
 		DimensionElementComponentAddDirect(D_MATERIAL_PLAN, TOT_PM, vELEM_MATERIAL, 1);
        
     #On traite les autres éléments   
 	 Else;
     
     	#Tant que le suivant existe
     	Suivant = vELEM_MATERIAL;
 	    While(Suivant @<> '' & Suivant @<> '0');
        	If(DIMIX(D_MATERIAL_PLAN, Suivant) <> 0);
 	    		If(DIMIX(D_MATERIAL_PLAN, Parent) <> 0);
            	
            		#On récupère le code retail de l'élément (peut être supprimé pour optimisation mais plus pratique pour tests)
            	 	Attr = AttrS(D_MATERIAL_PLAN, Suivant,'Code_Retail');
            	    If(Attr @<> '');
                 	Suivant = Attr;
            	    Endif;
                	Suivant = DimensionElementPrincipalName(D_MATERIAL_PLAN, Suivant);
                	Parent = DimensionElementPrincipalName(D_MATERIAL_PLAN, Parent);
            	    #On supprime le rattachement de l'élément à son ancien parent dans la hiérarchie retail
            	    Old_Par1 = ELPAR(D_MATERIAL_PLAN, Suivant, 1);
            	    If(Old_Par1 @<> '' & ELISANC(D_MATERIAL_PLAN,'TOTAL_RETAIL',Old_Par1) <> 0);
            	    	DimensionElementComponentDeleteDirect( D_MATERIAL_PLAN, Old_Par1, Suivant );
            	    EndIf;
            	    Old_Par2 = ELPAR(D_MATERIAL_PLAN, Suivant, 2);
            	    If(Old_Par2 @<> '' & ELISANC(D_MATERIAL_PLAN,'TOTAL_RETAIL',Old_Par2) <> 0);
            	    	DimensionElementComponentDeleteDirect( D_MATERIAL_PLAN, Old_Par2, Suivant );
            	    EndIf;
            	   
                
            		#On rattache l'élément à son parent (en respectant l'ordre des suivants)
 	        		DimensionElementComponentAddDirect(D_MATERIAL_PLAN, Parent, Suivant, 1);
 	        	EndIf;
            
           		#On incrémente
 	    		Suivant = AttrS(D_MATERIAL_PLAN, Suivant, 'Suivant Retail');
             Else;
             	Suivant = '';
             EndIf;
 	    End; 
     EndIf;
 EndIf;    


#-----------------1_G_MATERIAL------------------# 
#Rattachement des éléments à leur parent, leur enfant
#Si l'élément existe dans la dim
 If( DIMIX(D_MATERIAL, vELEM_MATERIAL) <> 0);
 	vELEM_MATERIAL = DimensionElementPrincipalName(D_MATERIAL, vELEM_MATERIAL);
    
    #On récupère son parent
 	Parent = AttrS(D_MATERIAL, vELEM_MATERIAL, 'Parent Retail');
    
    #On ne rattache pas le total retail
     If(vELEM_MATERIAL @= 'TOTAL_RETAIL');
     	ItemSkip;
        
     #On rattache les éléments sans parents au total retail
     ElseIf(Parent @= '' % Parent @= '0');
 		DimensionElementComponentAddDirect(D_MATERIAL, TOT_PM, vELEM_MATERIAL, 1);
        
     #On traite les autres éléments   
 	 Else;
     
     	#Tant que le suivant existe
     	Suivant = vELEM_MATERIAL;
 	    While(Suivant @<> '' & Suivant @<> '0');
        	If(DIMIX(D_MATERIAL, Suivant) <> 0);
 	    		If(DIMIX(D_MATERIAL, Parent) <> 0);
            	
            		#On récupère le code retail de l'élément (peut être supprimé pour optimisation mais plus pratique pour tests)
            	 	Attr = AttrS(D_MATERIAL, Suivant,'Code_Retail');
            	    If(Attr @<> '');
                 	Suivant = Attr;
            	    Endif;
                
                
            	    #On supprime le rattachement de l'élément à son ancien parent dans la hiérarchie retail
            	    Old_Par1 = ELPAR(D_MATERIAL, Suivant, 1);
            	    If(Old_Par1 @<> '' & ELISANC(D_MATERIAL,'TOTAL_RETAIL',Old_Par1) <> 0);
            	    	Suivant = DimensionElementPrincipalName(D_MATERIAL, Suivant);
            	    	DimensionElementComponentDeleteDirect( D_MATERIAL, Old_Par1, Suivant );
            	    EndIf;
            	    Old_Par2 = ELPAR(D_MATERIAL, Suivant, 2);
            	    If(Old_Par2 @<> '' & ELISANC(D_MATERIAL,'TOTAL_RETAIL',Old_Par2) <> 0);
            	    	Suivant = DimensionElementPrincipalName(D_MATERIAL, Suivant);
            	    	DimensionElementComponentDeleteDirect( D_MATERIAL, Old_Par2, Suivant );
            	    EndIf;
            	   
                
            		#On rattache l'élément à son parent (en respectant l'ordre des suivants)
 	        		DimensionElementComponentAddDirect(D_MATERIAL, Parent, Suivant, 1);
 	        	EndIf;
            
           		#On incrémente
 	    		Suivant = AttrS(D_MATERIAL, Suivant, 'Suivant Retail');
             Else;
             	Suivant = '';
             EndIf;
 	    End; 
     EndIf;
 EndIf; 




#Rattachement des éléments à leur parent, leur enfant
#Si l'élément existe dans la dim
 If( DIMIX(D_MATERIAL_PRICE, vELEM_MATERIAL) <> 0);
 	vELEM_MATERIAL = DimensionElementPrincipalName(D_MATERIAL_PRICE, vELEM_MATERIAL);
    
    #On récupère son parent
 	Parent = AttrS(D_MATERIAL_PRICE, vELEM_MATERIAL, 'Parent Retail');
    
    #On ne rattache pas le total retail
     If(vELEM_MATERIAL @= 'TOTAL_RETAIL');
     	ItemSkip;
        
     #On rattache les éléments sans parents au total retail
     ElseIf(Parent @= '' % Parent @= '0');
 		DimensionElementComponentAddDirect(D_MATERIAL_PRICE, TOT_PM, vELEM_MATERIAL, 1);
        
     #On traite les autres éléments   
 	 Else;
     
     	#Tant que le suivant existe
     	Suivant = vELEM_MATERIAL;
 	    While(Suivant @<> '' & Suivant @<> '0');
        	If(DIMIX(D_MATERIAL_PRICE, Suivant) <> 0);
 	    		If(DIMIX(D_MATERIAL_PRICE, Parent) <> 0);
            	
            		#On récupère le code retail de l'élément (peut être supprimé pour optimisation mais plus pratique pour tests)
            	 	Attr = AttrS(D_MATERIAL_PRICE, Suivant,'Code_Retail');
            	    If(Attr @<> '');
                 	Suivant = Attr;
            	    Endif;
                
                
            	    #On supprime le rattachement de l'élément à son ancien parent dans la hiérarchie retail
            	    Old_Par1 = ELPAR(D_MATERIAL_PRICE, Suivant, 1);
            	    If(Old_Par1 @<> '' & ELISANC(D_MATERIAL_PRICE,'TOTAL_RETAIL',Old_Par1) <> 0);
            	    	Suivant = DimensionElementPrincipalName(D_MATERIAL_PRICE, Suivant);
            	    	DimensionElementComponentDeleteDirect( D_MATERIAL_PRICE, Old_Par1, Suivant );
            	    EndIf;
            	    Old_Par2 = ELPAR(D_MATERIAL_PRICE, Suivant, 2);
            	    If(Old_Par2 @<> '' & ELISANC(D_MATERIAL_PRICE,'TOTAL_RETAIL',Old_Par2) <> 0);
            	    	Suivant = DimensionElementPrincipalName(D_MATERIAL_PRICE, Suivant);
            	    	DimensionElementComponentDeleteDirect( D_MATERIAL_PRICE, Old_Par2, Suivant );
            	    EndIf;
            	   
                
            		#On rattache l'élément à son parent (en respectant l'ordre des suivants)
 	        		DimensionElementComponentAddDirect(D_MATERIAL_PRICE, Parent, Suivant, 1);
 	        	EndIf;
            
           		#On incrémente
 	    		Suivant = AttrS(D_MATERIAL_PRICE, Suivant, 'Suivant Retail');
             Else;
             	Suivant = '';
             EndIf;
 	    End; 
     EndIf;
 EndIf; 




#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
SubsetDestroy(D_MATERIAL, subset_copy);
#endregion