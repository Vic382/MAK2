#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****



################################################################
#                                               DESCRIPTION DU PROCESSUS                                 #
#                                                                                                                                                   #
# Date :                                                                                                #
#                                                                                                                                                   #
# Fait par :                  #
#                                                                                                                                                   #
# Action :                                               #
#							 #
#                                                                                                                                                   #
#################################################################


#====================================#
#             Déclaration des variables                   #
#====================================#

#--------------------Cubes--------------------#
C_Cube_Source = 'SLS_SALES_PLAN';
C_Cube_Cible = 'SLS_SALES_PLAN';
C_zPROCESS_ADMINISTRATION = 'zPROCESS_ADMINISTRATION';

#--------------------Dimensions--------------------#
D_PHASE = '1_G_CURRENT_PHASE';
D_PERIOD = '1_G_PERIOD';
D_SALES_ORG = '1_G_SALES_ORG';
D_DISTRIB_CHANNEL = '1_G_DISTRIB_CHANNEL';
D_CURRENCY = '1_G_CURRENCY';
D_VOLUME_UNIT = '1_G_VOLUME_UNIT';
D_CUSTOMER = 'SLS_CUSTOMER';
D_MATERIAL = 'SLS_MATERIAL_PLAN';
D_SALES_GROUP = 'SLS_SALES_GROUP';
D_SALES_PLAN_IND='SLS_SALES_PLAN_IND';


#--------------------Elements--------------------#

e_Message_Prolog = '';



#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
IF (SUBST ( TM1User, 1,3) @='DOM' ) ;
   vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),7,100);
ELSEIF  (SUBST ( TM1User, 1,3) @='Cog' ) ; 
    vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),16,100);
ELSE ;
    vUSER ='Admin';
ENDIF;


vClient = AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue');


vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';



#--------------------Vues--------------------#
view_erase = 'z_erase__' | vUser|'_' | vPRO_NAME;
view_copy = 'z_copy_' | vUser|'_' | vPRO_NAME;

#--------------------Sous-ensembles--------------------#
subset_erase = 'z_erase__' |vUser|'_' | vPRO_NAME;
subset_copy = 'z_copy_' |vUser|'_' | vPRO_NAME;
subset_unit = 'z_unit_' |vUser|'_' | vPRO_NAME;

DatasourceASCIIDecimalSeparator='.';
DatasourceASCIIThousandSeparator='';

#====================================#
#        Désactivation de la consignation             #
#====================================#
#Modification le 01/07/2019 par Ann BESNARD pour avoir la traçabilité des monthly spread
# OldCubeLogChanges = CUBEGETLOGCHANGES(C_Cube_Cible);
# CUBESETLOGCHANGES(C_Cube_Cible, 0);



#=========================================#
#     Initialisation de la vue à copier/vue source           #
#=========================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Source,view_copy);
subsetdestroy(D_PHASE,subset_copy);
subsetdestroy(D_PERIOD,subset_copy);
subsetdestroy(D_SALES_ORG,subset_copy);
subsetdestroy(D_DISTRIB_CHANNEL,subset_copy);
subsetdestroy(D_CUSTOMER,subset_copy);
subsetdestroy(D_MATERIAL,subset_copy);
subsetdestroy(D_SALES_GROUP,subset_copy);
subsetdestroy(D_SALES_PLAN_IND,subset_copy);

#--------------------Création des objets pour la vue source (copy)--------------------#

#Dimension D_PHASE

v_Phase= CellGetS('zSelect',vClient,'Current Phase');
SubsetCreate(D_PHASE, subset_copy);

SubsetElementInsert(D_PHASE, subset_copy,v_Phase, 1);

#Dimension D_PERIOD
SubsetCreate(D_PERIOD, subset_copy);
SubsetElementInsert(D_PERIOD, subset_copy,P_period, 1);
SubsetElementInsert(D_PERIOD, subset_copy,'Tech_flag', 2);
#D_Sales_Group
Sales_Group_Source= CellGetS('zSelect',vClient,'Sales Group');
SubsetCreate(D_SALES_GROUP, subset_copy);
SubsetElementInsert(D_SALES_GROUP, subset_copy,Sales_Group_Source, 1);

#D_Distrib_Chann
# Distrib_Ch_Source= CellGetS('zSelect',vClient,'Distrib Channel');
# SubsetCreate(D_DISTRIB_CHANNEL , subset_copy);
# SubsetElementInsert(D_DISTRIB_CHANNEL , subset_copy,Distrib_Ch_Source, 1);
MDX_DISTRIB = '{{[1_G_DISTRIB_CHANNEL].[TOTAL_DISTRIB_CHANNEL]}, {TM1FILTERBYLEVEL({TM1SUBSETALL([1_G_DISTRIB_CHANNEL])},0)}}';
SubsetCreateByMDX(subset_copy, MDX_DISTRIB);
SubsetElementDelete(D_DISTRIB_CHANNEL, subset_copy, 1);
#D_Sales_Org
Sales_Org_Source= CellGetS('zSelect',vClient,'Sales org');
SubsetCreate(D_SALES_ORG, subset_copy);
SubsetElementInsert(D_SALES_ORG, subset_copy,Sales_Org_Source, 1);

#D_CUSTOMER
MDX ='{{[SLS_CUSTOMER].[TOTAL_CUSTOMER]},{TM1FILTERBYLEVEL( {TM1SUBSETALL( [SLS_CUSTOMER] )}, 0)}}';
SubsetCreateByMDX(subset_copy, MDX);
SubsetElementDelete( D_CUSTOMER, subset_copy, 1);


#D_SLS_MATERIAL_PLAN
MDX ='{{[SLS_MATERIAL_PLAN].[TOTAL_PLANNING_MATERIAL]},{TM1FILTERBYLEVEL( {TM1SUBSETALL( [SLS_MATERIAL_PLAN] )}, 0)}}';
SubsetCreateByMDX(subset_copy, MDX);
SubsetElementDelete( D_MATERIAL, subset_copy, 1);



#D_SALES_PLAN_IND
SubsetCreate(D_SALES_PLAN_IND, subset_copy);
SubsetElementInsert(D_SALES_PLAN_IND, subset_copy,P_Indicateur, 1);


ViewCreate(C_Cube_Source,view_copy);

#--------------------Affectation des sous-ensembles à la vue source--------------------#

ViewSubsetAssign(C_Cube_Source,view_copy,D_PHASE,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_PERIOD,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_SALES_ORG,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_DISTRIB_CHANNEL,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_CUSTOMER,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_MATERIAL,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_SALES_GROUP,subset_copy);
ViewSubsetAssign(C_Cube_Source,view_copy,D_SALES_PLAN_IND,subset_copy);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube_Source,view_copy,0);
ViewSetSkipCalcs(C_Cube_Source,view_copy, 1);
ViewSetSkipZeroes(C_Cube_Source,view_copy, 1);


#--------------------Création des objets pour la vue cible--------------------#

# définition de la vue source#

DatasourceCubeview= view_copy ;
#endregion
#region Data
##################### Récupération de la valeur du flag (1 pas de répartition pour la ligne en question)#####################

v_flag=CellGetN(C_Cube_Source,v_Phase,'Tech_flag', vELEM_SALES_ORG, vELEM_DISTRIB_CHANNEL, vELEM_CURRENCY,vELEM_VOLUME_UNIT, vELEM_CUSTOMER, vELEM_MATERIAL_PLAN, vELEM_SALES_GROUP, P_indicateur);
if(v_flag=0);
	CellputN(0,C_Cube_Source, v_Phase,P_period, vELEM_SALES_ORG, vELEM_DISTRIB_CHANNEL, vELEM_CURRENCY,vELEM_VOLUME_UNIT, vELEM_CUSTOMER, vELEM_MATERIAL_PLAN, vELEM_SALES_GROUP, P_Indicateur);
endif;
#################

#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****


#====================================#
#     Réactivation de la consignation#
#====================================#

# OldCubeLogChanges = CUBEGETLOGCHANGES(C_Cube_Cible);
# CUBESETLOGCHANGES(C_Cube_Cible, 1);

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Source,view_copy);
subsetdestroy(D_PHASE,subset_copy);
subsetdestroy(D_PERIOD,subset_copy);
subsetdestroy(D_SALES_ORG,subset_copy);
subsetdestroy(D_DISTRIB_CHANNEL,subset_copy);
subsetdestroy(D_CUSTOMER,subset_copy);
subsetdestroy(D_MATERIAL,subset_copy);
subsetdestroy(D_SALES_GROUP,subset_copy);
subsetdestroy(D_SALES_PLAN_IND,subset_copy);
#endregion