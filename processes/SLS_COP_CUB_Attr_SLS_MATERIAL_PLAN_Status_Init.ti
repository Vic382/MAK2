#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

##############################################################################
#                         DESCRIPTION DU PROCESSUS                           #
#                                                                            #
# Date :   07/08/2019                                                        #
#                                                                            #
# Fait par :    Ann BESNARD	                                                 #
#                                                                            #
# Action : Process de copie du status sur le status de la phase qu'on 		 #
#			initialise, cela permet de figer le status pour une phase donnée #
#			pour que la sécurité sur le status soit immuable				 #
##############################################################################


#===========================================#
#             Déclaration des variables     #
#===========================================#

#--------------------Cubes--------------------#
C_Cube = '}ElementAttributes_SLS_MATERIAL_PLAN';
C_zSELECT = 'zSELECT';

#--------------------Dimensions--------------------#
D_CURR_PHASE = '1_G_CURRENT_PHASE';
D_MATERIAL_PLAN = 'SLS_MATERIAL_PLAN';
D_Attr_MATERIAL_PLAN = '}ElementAttributes_SLS_MATERIAL_PLAN';

#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
IF (SUBST ( TM1User, 1,3) @='DOM' ) ;
   vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),7,100);
ELSEIF  (SUBST ( TM1User, 1,3) @='Cog' ) ; 
    vUSER = SUBST(AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue'),16,100);
ELSE ;
    vUSER ='Admin';
ENDIF;
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';


Current_Phase = CellGetS(C_zSELECT,vUSER,'Current Phase');
Current_Phase = DimensionElementPrincipalName( D_CURR_PHASE, Current_Phase );

#--------------------Vues--------------------#
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
view_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;

#--------------------Sous-ensembles--------------------#
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;


#============================================#
#        Initialisation de la vue à supprimer#
#============================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube,view_erase);
Subsetdestroy(D_MATERIAL_PLAN,subset_erase);
Subsetdestroy(D_Attr_MATERIAL_PLAN,subset_erase);

#--------------------Création des objets--------------------#
ViewCreate(C_Cube,view_erase);

#D_MATERIAL_PLAN
subsetcreate(D_MATERIAL_PLAN,subset_erase);
MDX_MATERIAL_PLAN = 'TM1FILTERBYLEVEL({TM1SUBSETALL([SLS_MATERIAL_PLAN])},0)';
SubsetMDXSet( D_MATERIAL_PLAN, subset_erase, MDX_MATERIAL_PLAN );

#D_Attr_MATERIAL_PLAN
subsetcreate(D_Attr_MATERIAL_PLAN,subset_erase);
SubsetElementInsert(D_Attr_MATERIAL_PLAN, subset_erase, 'Status '|Current_Phase, 1);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_Cube,view_erase, D_MATERIAL_PLAN, subset_erase);
ViewSubsetAssign(C_Cube,view_erase, D_Attr_MATERIAL_PLAN, subset_erase);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube,view_erase,1);
ViewSetSkipCalcs(C_Cube,view_erase, 1);
ViewSetSkipZeroes(C_Cube,view_erase, 1);

#--------------------Suppression des données--------------------#
ViewZeroOut(C_Cube,view_erase);

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube,view_erase);
Subsetdestroy(D_MATERIAL_PLAN,subset_erase);
Subsetdestroy(D_Attr_MATERIAL_PLAN,subset_erase);

#=========================================#
#     Initialisation de la vue à copier/vue source           #
#=========================================#

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube,view_copy);
SubsetDestroy( D_MATERIAL_PLAN, subset_copy );
SubsetDestroy( D_Attr_MATERIAL_PLAN, subset_copy );

#--------------------Création des objets--------------------#

ViewCreate(C_Cube,view_copy);

#D_MATERIAL_PLAN
subsetcreate(D_MATERIAL_PLAN,subset_copy);
MDX_MATERIAL_PLAN = 'TM1FILTERBYLEVEL({TM1SUBSETALL([SLS_MATERIAL_PLAN])},0)';
SubsetMDXSet( D_MATERIAL_PLAN, subset_copy, MDX_MATERIAL_PLAN );

#D_Attr_MATERIAL_PLAN
subsetcreate(D_Attr_MATERIAL_PLAN,subset_copy);
SubsetElementInsert(D_Attr_MATERIAL_PLAN, subset_copy, 'Status', 1);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_Cube,view_copy, D_MATERIAL_PLAN, subset_copy);
ViewSubsetAssign(C_Cube,view_copy, D_Attr_MATERIAL_PLAN, subset_copy);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube,view_copy,1);
ViewSetSkipCalcs(C_Cube,view_copy, 1);
ViewSetSkipZeroes(C_Cube,view_copy, 1);

# définition de la vue source#

DatasourceCubeview= view_copy ;
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

CellPutS(Value, C_Cube, vELEM_SLS_MATERIAL_PLAN, 'Status '|Current_Phase);
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****


#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube,view_copy);
SubsetDestroy( D_MATERIAL_PLAN, subset_copy );
SubsetDestroy( D_Attr_MATERIAL_PLAN, subset_copy );
#endregion