#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

##############################################################################
#                         DESCRIPTION DU PROCESSUS                           #
#                                                                            #
# Date :   16/04/2019                                                        #
#                                                                            #
# Fait par :    JMB 		                                                 #
#                                                                            #
# Action : Processus de copie des données prévisionnelles pour le CS		 #
#																			 #
##############################################################################




#===========================================#
#	Actualisation de la vue à réinitialiser	#
#===========================================#

IF(P_VERSION@= 'Final Version');

#--------------------Actualisation des objets--------------------#
# SLS_MATERIAL_PLAN
SubsetDeleteAllElements( 'SLS_MATERIAL_PLAN', subset_erase );
SubsetElementInsert('SLS_MATERIAL_PLAN', subset_erase, P_MATERIAL_PLAN, 1);
# SLS_CUSTOMER
SubsetDeleteAllElements( 'SLS_CUSTOMER', subset_erase );
SubsetElementInsert('SLS_CUSTOMER', subset_erase, P_CUSTOMER, 1);

#--------------------Suppression des données--------------------#
ViewZeroOut('SLS_ASSIGN', view_erase);

ENDIF;


#===============================================#
#	Actualisation de la vue à copier/vue source	#
#===============================================#

#--------------------Actualisation des objets--------------------#
# SLS_MATERIAL_PLAN
SubsetDeleteAllElements( 'SLS_MATERIAL_PLAN', subset_copy );
SubsetElementInsert('SLS_MATERIAL_PLAN', subset_copy, P_MATERIAL_PLAN, 1);
SubsetDeleteAllElements( 'SLS_MATERIAL_PLAN', subset_copy_pro_data );
SubsetElementInsert('SLS_MATERIAL_PLAN', subset_copy_pro_data, P_MATERIAL_PLAN, 1);
# SLS_CUSTOMER
SubsetDeleteAllElements( 'SLS_CUSTOMER', subset_copy );
SubsetElementInsert('SLS_CUSTOMER', subset_copy, P_CUSTOMER, 1);
SubsetDeleteAllElements( 'SLS_CUSTOMER', subset_copy_pro_data );
SubsetElementInsert('SLS_CUSTOMER', subset_copy_pro_data, P_CUSTOMER, 1);

#--------------------Déclaration de la vue source--------------------#
DataSourceNameForServer='SLS_INIT';
DatasourceCubeview=view_copy;
#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

# Détermination du numéro de la combinaison logistique pour la combinaison commerciale
iCombi_Log = 1;
vRes=0;
WHILE(iCombi_Log <= 500 & vRes = 0);
	sElmt = numberToString(iCombi_Log);
    vTarget_Cell = CellGetS( 'SLS_ASSIGN', vCURRENT_PHASE, P_VERSION, 'N/A PERIOD', vSALES_ORG, vDISTRIB_CHANNEL, vMATERIAL_PLAN, vCUSTOMER, sElmt  , 'Shipping Point');
	IF(vTarget_Cell @= '');
    	vRes = 1;
	ELSE;
		iCombi_Log = iCombi_Log+1;
	ENDIF;
END;

ExecuteProcess( 'SLS_COP_CUB_SLS_ASSIGN_CUB_SLS_INIT_Prev', 'P_VERSION',P_VERSION,'P_CURRENCY', P_CURRENCY,'P_SHIP_POINT',vSHIP_POINT,'P_SHIP_PLANT',vSHIP_PLANT,'P_PROD_PLANT',vPROD_PLANT,'P_VENDOR',vVENDOR,'P_LINE',sElmt,'subset_copy',subset_copy_pro_data,'view_copy',view_copy_pro_data);

#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion