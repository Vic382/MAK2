#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****



##############################################################################
#                         DESCRIPTION DU PROCESSUS                           #
#                                                                            #
# Date :   30/04/2019                                                        #
#                                                                            #
# Fait par :    JM 		                                        	         #
#                                                                            #
# Action : Processus pour la creation des nouveaux combinaisons logistiques				  	 #
#           																 #
#																			 #
##############################################################################

#===============================#
#	Déclaration des variables	#
#===============================#


#--------------------Cubes--------------------#
C_Cube_Source = 'SLS_NEW_COMBINATION';
C_Cube_Cible = 'SLS_ASSIGN';


#--------------------Dimensions--------------------#
D_CURRENT_PHASE = '1_G_CURRENT_PHASE';

D_PERIOD = '1_G_PERIOD';
D_SALES_ORG = '1_G_SALES_ORG';
D_DISTRIB_CHANNEL = '1_G_DISTRIB_CHANNEL';
D_SALES_GROUP= 'SLS_SALES_GROUP';
D_CUSTOMER = 'SLS_CUSTOMER';
D_LINE = '1_G_LINE';
D_COMB_TYPE='SLS_COMB_TYPE';
D_NEW_COMBINATION_IND='SLS_NEW_COMBINATION_IND';

D_MATERIAL_PLAN =' SLS_MATERIAL_PLAN' ; 
D_CUSTOMER='SLS_CUSTOMER' ; 
D_Version = 'SLS_VERSION';
D_ASSIGN_IND = 'SLS_ASSIGN_IND';

#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
vUser_Name = AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue');
vUSER = SUBST(vUser_Name, SCAN('/',vUser_Name)+1, 100);
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';
vClient = AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue');

#--------------------Vues--------------------#
view_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;

#--------------------Sous-ensembles--------------------#
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;

#--------------------Déclaration de la vue source--------------------#
DataSourceNameForServer=C_Cube_Source;
DatasourceCubeview=view_copy;





As_Temporary = 1;
#--------------------Création des objets Source--------------------#
ViewCreate(C_Cube_Source ,view_copy, As_Temporary );
# 1_G_CURRENT_PHASE
subsetcreate(D_CURRENT_PHASE,subset_copy ,As_Temporary);
SubsetElementInsert(D_CURRENT_PHASE, subset_copy, 'CURR_PHASE', 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_CURRENT_PHASE,subset_copy);

# 1_G_SALES_ORG

subsetcreate(D_SALES_ORG,subset_copy ,As_Temporary);
SubsetElementInsert(D_SALES_ORG, subset_copy, p_Sales_org, 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_SALES_ORG,subset_copy);

# 1_G_DISTRIB_CHANNEL

subsetcreate(D_DISTRIB_CHANNEL,subset_copy ,As_Temporary);
SubsetElementInsert(D_DISTRIB_CHANNEL, subset_copy, p_Distrib_Channel, 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_DISTRIB_CHANNEL,subset_copy);


#SLS_SALES_GROUP
subsetcreate(D_SALES_GROUP,subset_copy ,As_Temporary);
SubsetElementInsert(D_SALES_GROUP, subset_copy, 'N/A_SALES_GROUP', 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_SALES_GROUP,subset_copy);


#SLS_COMB_TYPE
subsetcreate(D_COMB_TYPE ,subset_copy ,As_Temporary);
SubsetElementInsert(D_COMB_TYPE, subset_copy, 'CS_Assign', 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_COMB_TYPE,subset_copy);

 
#SLS_NEW_COMBINATION_IND
subsetcreate(D_NEW_COMBINATION_IND ,subset_copy ,As_Temporary);
SubsetElementInsert(D_NEW_COMBINATION_IND, subset_copy, 'Volume', 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_NEW_COMBINATION_IND,subset_copy);

#--------------------Suppression des cellules vides, consolidées, calculées pour la vue source--------------------#
ViewSetSkipRuleValues(C_Cube_Source,view_copy,1);
ViewSetSkipCalcs(C_Cube_Source,view_copy, 1);
ViewSetSkipZeroes(C_Cube_Source,view_copy, 1);



#=========================================#
# Initialisation de la vue à supprimer # REINIT de NEW COMB, ce n'est pas la vue cible
#=========================================#

#pas de restriction sur les périodes à faire car on supprime la vue à la fin de ce process. 

#--------------------Destruction des objets--------------------#
ViewDestroy(C_Cube_Source,view_erase);
SubsetDestroy(D_CURRENT_PHASE, subset_erase);
SubsetDestroy(D_SALES_GROUP, subset_erase);
SubsetDestroy(D_COMB_TYPE, subset_erase);
SubsetDestroy(D_SALES_ORG, subset_erase);
SubsetDestroy(D_DISTRIB_CHANNEL, subset_erase);

#--------------------Création des objets--------------------#

ViewCreate(C_Cube_Source,view_erase);

#D_CURRENT_PHASE
subsetcreate(D_CURRENT_PHASE,subset_erase);
SubsetElementInsert(D_CURRENT_PHASE, subset_erase, 'CURR_PHASE', 1);

#D_SALES_GROUP
subsetcreate(D_SALES_GROUP,subset_erase);
SubsetElementInsert(D_SALES_GROUP, subset_erase, 'N/A_SALES_GROUP', 1);

#D_COMB_TYPE
subsetcreate(D_COMB_TYPE, subset_erase);
SubsetElementInsert(D_COMB_TYPE, subset_erase, 'CS_Assign', 1);

# 1_G_SALES_ORG

subsetcreate(D_SALES_ORG,subset_erase);
SubsetElementInsert(D_SALES_ORG, subset_erase, p_Sales_org, 1);
ViewSubsetAssign(C_Cube_Source,view_erase, D_SALES_ORG,subset_erase);

# 1_G_DISTRIB_CHANNEL

subsetcreate(D_DISTRIB_CHANNEL,subset_erase );
SubsetElementInsert(D_DISTRIB_CHANNEL, subset_erase, p_Distrib_Channel, 1);
ViewSubsetAssign(C_Cube_Source,view_erase, D_DISTRIB_CHANNEL,subset_erase);

#--------------------Affectation des sous-ensembles à la vue--------------------#
ViewSubsetAssign(C_Cube_Source,view_erase, D_CURRENT_PHASE,subset_erase);
ViewSubsetAssign(C_Cube_Source,view_erase, D_SALES_GROUP,subset_erase);
ViewSubsetAssign(C_Cube_Source,view_erase, D_COMB_TYPE,subset_erase);
ViewSubsetAssign(C_Cube_Source,view_erase, D_SALES_ORG,subset_erase);
ViewSubsetAssign(C_Cube_Source,view_erase, D_DISTRIB_CHANNEL,subset_erase);

#--------------------Suppression des cellules vides, consolidées, calculées--------------------#
ViewSetSkipRuleValues(C_Cube_Source,view_erase,1);
ViewSetSkipCalcs(C_Cube_Source,view_erase, 1);
ViewSetSkipZeroes(C_Cube_Source,view_erase, 1);

#endregion
#region Data
v_Customer = CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Customer' ) ;
v_Planning_Material = CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Planning Material' ) ;
v_Shipping_Point =  CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Shipping Point' ) ;
v_Shipping_Plant = CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Shipping Plant' ) ;
v_Production_Plant =  CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Production Plant' ) ;
v_Vendor =  CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Vendor');

# VRT : Mise en place contrat indexé
v_Q_HQ = CellGetS( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'Standard_Indexe');
# Fin VRT 


#v_vol =  CellGetN( C_Cube_Source,v_Current_Phase  ,'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SALES_GROUP,v_G_Line,v_COMB_TYPE,'SLS_VOL')
#Verfication de la combinaison dans le cube Assign

vTotal_VolumeAssign = CellGetN ( 'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'CAMP YEAR',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,'Total_Line','ASSIGN_VOL');
if ( vTotal_VolumeAssign = 0  );

CellputS ( v_Shipping_Point ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,'L1','SHIP_PT' ) ;
CellputS ( v_Shipping_Plant ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,'L1','SHIP_PLANT' ) ;
CellputS ( v_Production_Plant ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,'L1','PROD_PLANT' ) ;
CellputS ( v_Vendor ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,'L1','VENDOR' ) ;
CellputN ( valeur  ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,v_G_PERIOD,v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,'L1','ASSIGN_VOL' ) ;
else ;
MyLine ='L1' ;
MyEmptyLine = '' ;

while ( MyLine @<> '' &  MyEmptyLine @= '' ) ;

myShip_Pt =  CellGetS ( 'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,myLine,'SHIP_PT' ) ;
myShip_Pl =  CellGetS ( 'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,myLine,'SHIP_PLANT' ) ;
myProd_Pt =  CellGetS ( 'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,myLine,'PROD_PLANT' ) ;
myVendor =  CellGetS ( 'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,myLine,'Vendor' ) ;
myvol       =   CellGetN ( 'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,v_G_PERIOD,v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,myLine,'SLS_VOL' ) ;

if ( v_Shipping_Point @= myShip_Pt  & v_Shipping_Plant @= myShip_Pl & v_Production_Plant @= myProd_Pt  & v_Vendor @= myVendor  & valeur > 0 ) ;

CellputN ( valeur  ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,v_G_PERIOD,v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,MyLine,'ASSIGN_VOL' ) ;
itemskip;


Elseif (myShip_Pt@=''  & myShip_Pl@='' &  myProd_Pt@=''  & myVendor@='')  ;
CellputS ( v_Shipping_Point ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,MyLine,'SHIP_PT' ) ;
CellputS ( v_Shipping_Plant ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer, MyLine,'SHIP_PLANT' ) ;
CellputS ( v_Production_Plant ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,MyLine,'PROD_PLANT' ) ;
CellputS ( v_Vendor ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,'N/A PERIOD',v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,MyLine,'VENDOR' ) ;
CellputN ( valeur  ,'SLS_ASSIGN',v_Current_Phase , 'FV', v_Q_HQ ,v_G_PERIOD,v_g_sales_org , v_g_distrib_channel, v_Planning_Material, v_Customer ,MyLine,'ASSIGN_VOL' ) ;
MyEmptyLine = MyLine ; 
itemskip ;

Endif ;

MyLine = ATTRS ( D_Line , MyLine , 'Ligne_Suivante' ) ;

End ; 


Endif ; 


#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****


ViewZeroOut(C_Cube_Source, view_erase);

ViewDestroy(C_Cube_Source,view_erase);
SubsetDestroy(D_CURRENT_PHASE, subset_erase);
SubsetDestroy(D_SALES_GROUP, subset_erase);
SubsetDestroy(D_COMB_TYPE, subset_erase);
SubsetDestroy(D_SALES_ORG, subset_erase);
SubsetDestroy(D_DISTRIB_CHANNEL, subset_erase);
#endregion