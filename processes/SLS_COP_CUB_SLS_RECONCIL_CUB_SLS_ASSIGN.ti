#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****



##############################################################################
#                         DESCRIPTION DU PROCESSUS                           #
#                                                                            #
# Date :   26/04/2019                                                        #
#                                                                            #
# Fait par :    JM 		                                        	         #
#                                                                            #
# Action : Processus copie du cube Assign vers reconcil					  	 #
#           																 #
#																			 #
##############################################################################

#===============================#
#	Déclaration des variables	#
#===============================#

##### 29/09/2022 Modif VRT : Ticket 481022 changement des PAX en bouton WS   #######

# Définition des cubes
sCubeSelect = 'zSELECT' ;

# Récupération du User lancant le processus
sUser = AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue') ;

# Récupération des éléments dans le cube zSelect
p_Distrib_Channel = CellGetS ( sCubeSelect , sUser , 'Distrib Channel' ) ;
p_Sales_org = CellGetS ( sCubeSelect , sUser , 'Sales org' ) ;

##### Fin 29/09/2022 Modif VRT : Ticket 481022 changement des PAX en bouton WS   #######

#--------------------Cubes--------------------#
C_Cube_Source = 'SLS_ASSIGN';
C_Cube_Cible = 'SLS_RECONCIL';


#--------------------Dimensions--------------------#
D_CURRENT_PHASE = '1_G_CURRENT_PHASE';
D_Version = 'SLS_VERSION';
D_PERIOD = '1_G_PERIOD';
D_SALES_ORG = '1_G_SALES_ORG';
D_DISTRIB_CHANNEL = '1_G_DISTRIB_CHANNEL';
D_MATERIAL_EXT = 'SLS_MATERIAL_EXT';
D_CUSTOMER = 'SLS_CUSTOMER';
D_LINE = '1_G_LINE';
D_ASSIGN_IND='SLS_ASSIGN_IND';

D_SHIP_POINT = 'SLS_SHIP_POINT';
D_SHIP_PLANT = 'SLS_SHIP_PLANT';
D_PROD_PLANT = 'SLS_PROD_PLANT';
D_VENDOR = 'SLS_VENDOR';
D_RECONCIL_IND = 'SLS_RECONCIL_IND';

#--------------------Variables globales--------------------#
vDATE = today(1) | ' ' | TIME;
vLocalTime =  '_' | today(1) | '_' | subst(TIME,1,2) | 'h' | subst(TIME,4,2);
vTimeStart_Sec =  StringToNumber(TimSt (Now, '\h'))*3600 +StringToNumber(TimSt (Now, '\i'))*60+StringToNumber(TimSt (Now, '\s'));
vUser_Name = AttrS('}Clients',TM1User,'}TM1_DefaultDisplayValue');
vUSER = SUBST(vUser_Name, SCAN('/',vUser_Name)+1, 100);
vPRO_NAME = GetProcessName();
vSTATUS='KO';
vNb_lines_recorded=0;
vNb_lines_recorded_Metadata=0;
vNb_lines_recorded_Data=0;
vNb_lines=0;
err_prolog=0;
message_err_prolog='';
vClient = AttrS('}Clients',TM1User,'Caption');

#--------------------Vues--------------------#
view_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
view_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;


#--------------------Sous-ensembles--------------------#
subset_erase = 'z_erase_' | vUSER |'_' | vPRO_NAME;
subset_copy = 'z_copy_' | vUSER |'_' | vPRO_NAME;


#--------------------Déclaration de la vue source--------------------#
DataSourceNameForServer=C_Cube_Source;
DatasourceCubeview=view_copy;


# Récupération de la phase en cours et des paramètres de cette phase
P_Phase = CellGetS('zSelect', vClient ,'Current Phase');


As_Temporary = 1 ;
#--------------------Création des objets Source--------------------#
ViewCreate(C_Cube_Source ,view_copy, As_Temporary );
# 1_G_CURRENT_PHASE
subsetcreate(D_CURRENT_PHASE,subset_copy ,As_Temporary);
SubsetElementInsert(D_CURRENT_PHASE, subset_copy, P_Phase, 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_CURRENT_PHASE,subset_copy);

# SLS_VERSION
subsetcreate(D_VERSION,subset_copy ,As_Temporary);
SubsetElementInsert(D_VERSION, subset_copy, 'FV', 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_VERSION,subset_copy);

# 1_G_SALES_ORG
if ( p_Sales_org @<> '');
subsetcreate(D_SALES_ORG,subset_copy ,As_Temporary);
SubsetElementInsert(D_SALES_ORG, subset_copy, p_Sales_org, 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_SALES_ORG,subset_copy);
endif ;
# 1_G_DISTRIB_CHANNEL
if ( p_Distrib_Channel @<> '');
subsetcreate(D_DISTRIB_CHANNEL,subset_copy ,As_Temporary);
SubsetElementInsert(D_DISTRIB_CHANNEL, subset_copy, p_Distrib_Channel, 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_DISTRIB_CHANNEL,subset_copy);
endif ;

#SLS_CUSTOMER 
#subsetcreate(D_CUSTOMER,subset_copy ,As_Temporary);
#SubsetElementInsert(D_CUSTOMER, subset_copy, 'TOTAL_CUSTOMER', 1);
#ViewSubsetAssign(C_Cube_Source,view_copy, D_CUSTOMER,subset_copy);

#SLS_RESS_PLAN_ID
subsetcreate(D_ASSIGN_IND,subset_copy ,As_Temporary);
SubsetElementInsert(D_ASSIGN_IND, subset_copy, 'ASSIGN_VOL', 1);
ViewSubsetAssign(C_Cube_Source,view_copy, D_ASSIGN_IND,subset_copy);

 
#--------------------Suppression des cellules vides, consolidées, calculées pour la vue source--------------------#
ViewSetSkipRuleValues(C_Cube_Source,view_copy,1);
ViewSetSkipCalcs(C_Cube_Source,view_copy, 1);
ViewSetSkipZeroes(C_Cube_Source,view_copy, 1);




#--------------------Création des objets cible--------------------#
ViewCreate(C_Cube_cible ,view_erase, As_Temporary );
# 1_G_CURRENT_PHASE
subsetcreate(D_CURRENT_PHASE,subset_erase ,As_Temporary);
SubsetElementInsert(D_CURRENT_PHASE, subset_erase, P_Phase, 1);
ViewSubsetAssign(C_Cube_cible,view_erase, D_CURRENT_PHASE,subset_erase);
# 1_G_SALES_ORG
if ( p_Sales_org @<> '');
subsetcreate(D_SALES_ORG,subset_erase ,As_Temporary);
SubsetElementInsert(D_SALES_ORG, subset_erase, p_Sales_org, 1);
ViewSubsetAssign(C_Cube_cible,view_erase, D_SALES_ORG,subset_erase);
endif ;
# 1_G_DISTRIB_CHANNEL
if ( p_Distrib_Channel @<> '');
subsetcreate(D_DISTRIB_CHANNEL,subset_erase ,As_Temporary);
SubsetElementInsert(D_DISTRIB_CHANNEL, subset_erase, p_Distrib_Channel, 1);
ViewSubsetAssign(C_Cube_cible,view_erase, D_DISTRIB_CHANNEL,subset_erase);
endif ;

#SLS_RESS_PLAN_ID
subsetcreate(D_RECONCIL_IND,subset_erase ,As_Temporary);
SubsetElementInsert(D_RECONCIL_IND, subset_erase, 'SLS_VOL', 1);
ViewSubsetAssign(C_Cube_cible,view_erase, D_RECONCIL_IND,subset_erase);

ViewZeroOut( C_Cube_cible,view_erase);



#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****


v_ShipPoint = CellGetS( C_Cube_Source,v_Current_Phase ,v_SLS_VERSION , v_Q_HQ , 'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SLS_MATERIAL_PLAN,v_SLS_CUSTOMER,v_G_Line,'SHIP_PT' ) ;
v_ShipPlant = CellGetS( C_Cube_Source,v_Current_Phase ,v_SLS_VERSION , v_Q_HQ , 'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SLS_MATERIAL_PLAN,v_SLS_CUSTOMER,v_G_Line,'SHIP_PLANT' ) ;
v_ProdPlant = CellGetS( C_Cube_Source,v_Current_Phase ,v_SLS_VERSION , v_Q_HQ , 'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SLS_MATERIAL_PLAN,v_SLS_CUSTOMER,v_G_Line,'PROD_PLANT' ) ;
v_Vendor = CellGetS( C_Cube_Source,v_Current_Phase ,v_SLS_VERSION , v_Q_HQ , 'N/A PERIOD', v_g_sales_org , v_g_distrib_channel, v_SLS_MATERIAL_PLAN,v_SLS_CUSTOMER,v_G_Line,'VENDOR' ) ;
v_Material_Ext = ATTRS('SLS_Material_Plan',v_SLS_MATERIAL_PLAN, 'Ext.MAtl Group' );
v_Division = AttrS('SLS_MATERIAL_PLAN',ELPAR( 'SLS_MATERIAL_PLAN', v_SLS_MATERIAL_PLAN, 1 ),'Caption');
v_Total_Division = 'Total '|v_Division;

If(v_ShipPoint @= '');
	v_ShipPoint = 'N/A_SHIP_POINT';
EndIf;
If(v_ShipPlant @= '');
	v_ShipPlant = 'N/A_SHIP_PLANT';
EndIf;
If(v_ProdPlant @= '');
	v_ProdPlant = 'N/A_PROD_PLANT';
EndIf;
If(v_Vendor @= '');
	v_Vendor = 'N/A_VENDOR';
EndIf;
If(v_Material_Ext @= '');
	v_Material_Ext = 'N/A_MATERIAL_EXT';
EndIf;

If(v_Material_Ext @<>  'N/A_MATERIAL_EXT');
	CellIncrementN( Value,C_Cube_Cible,v_Current_Phase , v_G_Period,v_g_sales_org , v_g_distrib_channel, v_Material_Ext, v_ShipPoint,v_ShipPlant,v_ProdPlant ,v_Vendor,'SLS_VOL');
EndIf;
CellIncrementN( Value,C_Cube_Cible,v_Current_Phase , v_G_Period,v_g_sales_org , v_g_distrib_channel, v_Total_Division, v_ShipPoint,v_ShipPlant,v_ProdPlant ,v_Vendor,'SLS_VOL');
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion